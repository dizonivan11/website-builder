var selectedElement = document.createElement("div");
var selectedElementOffset = 15;

window.onload = function() {
	// Create and add selected element controller
	selectedElement.id = "selected-element";
	document.body.appendChild(selectedElement);

	// selected element follows cursor
	document.body.onmousemove = function (e) {
		selectedElement.style.left = (e.clientX + selectedElementOffset) + "px";
		selectedElement.style.top = (e.clientY + selectedElementOffset) + "px";
	};
}

String.prototype.format = function() {
	a = this;
	for (k in arguments) {
		a = a.replace("{" + k + "}", arguments[k])
	}
	return a;
}

// Process messages coming from builder
window.onmessage = function (e) {
	switch (e.data.header) {
		case "selectWidget":
			selectedElement.innerHTML = e.data.message;
			break;
		case "clearCSS":
			$(e.data.wid).removeAttr("style");
			// Inform builder that the inline css is now cleared and ready for 'applyCSS' and 'applyHTML'
			window.top.postMessage({ header: "clearCSS" });
			break;
		case "applyCSS":
			$(e.data.wid).css(e.data.propertyName, e.data.propertyFormat.format(e.data.propertyValue));
			break;
		case "applyHTML":
			$(e.data.wid).html(e.data.propertyFormat.format(e.data.propertyValue));
			break;
	}
}

function DropElement(e) {
	var isEmpty = e.className == "drop-zone";
	var parent = e.parentElement;
	if (selectedElement.innerHTML != "") {
		// Insert the selected element before the drop zone then clear the content of selected element
		// Minimize the drop zone if the selected element is the first widget to be added
		// SelectedElement must only have one container (widget-wrapper) which is auto generated by the builder
		// NOTE:-----
		// Not to be confused with the wrapper inside the widget itself (inner-wrapper) which can be styled -
		// as widget-wrapper only has meta data and a highlighting outline style.
		// Also, inner-wrapper is used to disable pointer events inside it so that we can select the -
		// widget-wrapper for opening menus not the elements of the widget.
		// ----------
		if (isEmpty) {
			e.className = "drop-zone-min";
			e.innerHTML = "+";
		}
		var widgetWrapper = selectedElement.childNodes[0];
		widgetWrapper.onclick = function() {
			if (selectedElement.innerHTML != "") {
				// If there is selected widget, function as drop zone
				DropElement(this);
			} else {
				// Else, open properties window
				window.top.postMessage({
					header: "open-widget-properties",
					widgetID: this.id,
					widgetPropertiesPath: this.getAttribute("widget-name")
				});
			}
		}
		parent.insertBefore(widgetWrapper, e);
		selectedElement.innerHTML = "";
		
		// Inform builder to display a message in feedback box
		window.top.postMessage({ header: "feedback", message: "Selected widget dropped" });
	} else {
		// Inform builder to display a message in feedback box
		window.top.postMessage({ header: "feedback", message: "No selected widget" });
	}
}